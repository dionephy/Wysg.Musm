<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!-- Global Dark Theme Brushes -->
  <Color x:Key="Dark.Color.Background">#1E1E1E</Color>
  <Color x:Key="Dark.Color.Panel">#252525</Color>
  <Color x:Key="Dark.Color.PanelAlt">#2D2D30</Color>
  <Color x:Key="Dark.Color.Border">#3C3C3C</Color>
  <Color x:Key="Dark.Color.BorderLight">#4A4A4A</Color>  
  <Color x:Key="Dark.Color.Accent">#3D7BFD</Color>
  <Color x:Key="Dark.Color.AccentAlt">#2F65C8</Color>
  <Color x:Key="Dark.Color.Selection">#094771</Color>
  <Color x:Key="Dark.Color.Foreground">#D0D0D0</Color>
  <Color x:Key="Dark.Color.ForegroundDim">#A0A0A0</Color>

  <!-- New: Scrollbar specific colors -->
  <Color x:Key="Dark.Color.Scrollbar.Track">#2A2A2A</Color>
  <Color x:Key="Dark.Color.Scrollbar.Thumb">#505050</Color>
  <Color x:Key="Dark.Color.Scrollbar.ThumbHover">#5E5E5E</Color>
  <Color x:Key="Dark.Color.Scrollbar.ThumbActive">#6C6C6C</Color>
  <Color x:Key="Dark.Color.Scrollbar.Border">#3A3A3A</Color>

  <SolidColorBrush x:Key="Dark.Brush.Background" Color="{StaticResource Dark.Color.Background}"/>
  <SolidColorBrush x:Key="Dark.Brush.Panel" Color="{StaticResource Dark.Color.Panel}"/>
  <SolidColorBrush x:Key="Dark.Brush.PanelAlt" Color="{StaticResource Dark.Color.PanelAlt}"/>
  <SolidColorBrush x:Key="Dark.Brush.Border" Color="{StaticResource Dark.Color.Border}"/>
  <SolidColorBrush x:Key="Dark.Brush.BorderLight" Color="{StaticResource Dark.Color.BorderLight}"/>
  <SolidColorBrush x:Key="Dark.Brush.Accent" Color="{StaticResource Dark.Color.Accent}"/>
  <SolidColorBrush x:Key="Dark.Brush.AccentAlt" Color="{StaticResource Dark.Color.AccentAlt}"/>
  <SolidColorBrush x:Key="Dark.Brush.Selection" Color="{StaticResource Dark.Color.Selection}"/>
  <SolidColorBrush x:Key="Dark.Brush.Foreground" Color="{StaticResource Dark.Color.Foreground}"/>
  <SolidColorBrush x:Key="Dark.Brush.ForegroundDim" Color="{StaticResource Dark.Color.ForegroundDim}"/>
  <!-- Optional: Phrase missing color (used by PhraseColorizer if present) -->
  <SolidColorBrush x:Key="Dark.Brush.PhraseMissing" Color="#FF0000"/>

  <!-- New: Scrollbar Brushes -->
  <SolidColorBrush x:Key="Dark.Brush.Scrollbar.Track" Color="{StaticResource Dark.Color.Scrollbar.Track}"/>
  <SolidColorBrush x:Key="Dark.Brush.Scrollbar.Thumb" Color="{StaticResource Dark.Color.Scrollbar.Thumb}"/>
  <SolidColorBrush x:Key="Dark.Brush.Scrollbar.ThumbHover" Color="{StaticResource Dark.Color.Scrollbar.ThumbHover}"/>
  <SolidColorBrush x:Key="Dark.Brush.Scrollbar.ThumbActive" Color="{StaticResource Dark.Color.Scrollbar.ThumbActive}"/>
  <SolidColorBrush x:Key="Dark.Brush.Scrollbar.Border" Color="{StaticResource Dark.Color.Scrollbar.Border}"/>

  <!-- Global Monospace Font -->
  <FontFamily x:Key="Dark.MonoFont">pack://application:,,,/Wysg.Musm.Radium;component/Fonts/#D2Coding</FontFamily>

    <Style TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{StaticResource Dark.MonoFont}"/>
    </Style>

    <!-- Ensure text elements also use it -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource Dark.MonoFont}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    </Style>
    <Style TargetType="{x:Type TextElement}">
        <Setter Property="FontFamily" Value="{StaticResource Dark.MonoFont}"/>
    </Style>

    <!-- Base control styles -->
    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.Background}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="FontFamily" Value="{StaticResource Dark.MonoFont}"/>
    <Setter Property="FontSize" Value="13"/>
  </Style>    
    

  <Style TargetType="Button">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.PanelAlt}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="8,4"/>
    <Setter Property="Margin" Value="4,2,0,2"/>
	  <Setter Property="Template">
		  <Setter.Value>
			  <ControlTemplate TargetType="Button">
				  <Border x:Name="border"
					  Background="{TemplateBinding Background}"
					  BorderBrush="{TemplateBinding BorderBrush}"
					  BorderThickness="{TemplateBinding BorderThickness}"
					  CornerRadius="4">
					  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
				  </Border>
				  <ControlTemplate.Triggers>
					  <Trigger Property="IsMouseOver" Value="True">
						  <Setter TargetName="border" Property="Background" Value="{StaticResource Dark.Brush.PanelAlt}"/>
						  <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Dark.Brush.AccentAlt}"/>
					  </Trigger>
					  <Trigger Property="IsPressed" Value="True">
						  <Setter TargetName="border" Property="Background" Value="{StaticResource Dark.Brush.Border}"/>
						  <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Dark.Brush.AccentAlt}"/>
					  </Trigger>
					  <Trigger Property="IsEnabled" Value="False">
						  <Setter Property="Opacity" Value="0.6"/>
					  </Trigger>
				  </ControlTemplate.Triggers>
			  </ControlTemplate>
		  </Setter.Value>
	  </Setter>	  
  </Style>

  <Style TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Brush.ForegroundDim}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.BorderLight}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="4"/>
  </Style>

	<Style TargetType="PasswordBox">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Brush.ForegroundDim}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.BorderLight}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="4"/>
	</Style>

  <Style TargetType="ComboBox">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Background" Value="{StaticResource Dark.Brush.PanelAlt}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="4,2,28,2"/>
    <Setter Property="FontFamily" Value="{StaticResource Dark.MonoFont}"/>
    <Setter Property="FontSize" Value="11"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="TextSearch.TextPath" Value="Text"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="22"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Bd" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
            <Grid Grid.Column="0" Margin="2,0,2,0">
              <!-- Display SelectedValue (e.g., Name) first, then fall back to SelectedItem.Name, Text, then SelectionBoxItem -->
              <TextBlock Margin="4,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Left">
                <TextBlock.Text>
                  <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="SelectedValue"/>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="SelectedItem.Name"/>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Text"/>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="SelectionBoxItem"/>
                  </PriorityBinding>
                </TextBlock.Text>
              </TextBlock>
              <ToggleButton x:Name="FullSurfaceToggle" Background="Transparent" BorderThickness="0" Focusable="False" IsHitTestVisible="True" Cursor="Arrow" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Template>
                  <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent" />
                  </ControlTemplate>
                </ToggleButton.Template>
              </ToggleButton>
            </Grid>
            <ToggleButton x:Name="DropDownToggle" Grid.Column="1" Focusable="False" Background="Transparent" BorderThickness="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Width="22" Padding="0" Cursor="Arrow">
              <Grid>
                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource Dark.Brush.Foreground}"/>
              </Grid>
            </ToggleButton>
            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
              <Border x:Name="DropDownBorder" Background="{StaticResource Dark.Brush.Panel}" BorderBrush="{StaticResource Dark.Brush.Border}" BorderThickness="1" CornerRadius="2" 
                      Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True"/>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="40"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource Dark.Brush.ForegroundDim}"/>
              <Setter TargetName="Bd" Property="Opacity" Value="0.55"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Dark.Brush.AccentAlt}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Dark.Brush.AccentAlt}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Dark.Brush.Accent}"/>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ComboBoxItem">
    <Setter Property="Background" Value="#1E1E1E"/>
    <Setter Property="Foreground" Value="#D0D0D0"/>
    <Setter Property="Padding" Value="4,2"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <ContentPresenter VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="#2A2A2A"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="#333842"/>
              <Setter Property="Foreground" Value="#FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="#555"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="CheckBox">
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="Margin" Value="4,2,4,2"/>
  </Style>

  <Style TargetType="GroupBox">
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
    <Setter Property="Padding" Value="6"/>
  </Style>

  <Style TargetType="TabControl">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
  </Style>
  <Style TargetType="TabItem">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.PanelAlt}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="12,6"/>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Accent}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="TreeView">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
  </Style>
  <Style TargetType="TreeViewItem">
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.Selection}"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.PanelAlt}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="DataGrid">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="RowBackground" Value="{StaticResource Dark.Brush.Panel}"/>
    <Setter Property="AlternatingRowBackground" Value="{StaticResource Dark.Brush.PanelAlt}"/>
    <Setter Property="GridLinesVisibility" Value="None"/>
  </Style>
  <Style TargetType="DataGridColumnHeader">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.PanelAlt}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="BorderThickness" Value="0 0 1 1"/>
  </Style>
  <Style TargetType="DataGridRow">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="BorderThickness" Value="0 0 0 1"/>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.Selection}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- Add: Dark ListBox styles -->
  <Style TargetType="ListBox">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
  </Style>
  <Style TargetType="ListBoxItem">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Panel}"/>
    <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
    <Setter Property="Padding" Value="4,2"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.PanelAlt}"/>
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{StaticResource Dark.Brush.Selection}"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource Dark.Brush.ForegroundDim}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- New: Modern Dark Scrollbar Styles -->
  <!-- Thumb styling (do not set fixed Height/Width to keep length proportional) -->
  <Style x:Key="Dark.Scrollbar.ThumbStyle" TargetType="Thumb">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Scrollbar.Thumb}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Scrollbar.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Thumb">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6"/>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource Dark.Brush.Scrollbar.ThumbHover}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource Dark.Brush.Scrollbar.ThumbActive}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Line buttons (page areas) kept transparent to allow page scrolling without arrows) -->
  <Style x:Key="Dark.Scrollbar.LineButtonStyle" TargetType="RepeatButton">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Border Background="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Horizontal ScrollBar Template -->
  <ControlTemplate x:Key="Dark.Scrollbar.HorizontalTemplate" TargetType="ScrollBar">
    <Border Background="{StaticResource Dark.Brush.Scrollbar.Track}" CornerRadius="6">
      <Track x:Name="PART_Track" IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton Style="{StaticResource Dark.Scrollbar.LineButtonStyle}" Command="ScrollBar.PageLeftCommand"/>
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <!-- Thickness across axis, min length along axis -->
          <Thumb Style="{StaticResource Dark.Scrollbar.ThumbStyle}" Height="8" MinWidth="36"/>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Style="{StaticResource Dark.Scrollbar.LineButtonStyle}" Command="ScrollBar.PageRightCommand"/>
        </Track.IncreaseRepeatButton>
      </Track>
    </Border>
  </ControlTemplate>

  <!-- Vertical ScrollBar Template -->
  <ControlTemplate x:Key="Dark.Scrollbar.VerticalTemplate" TargetType="ScrollBar">
    <Border Background="{StaticResource Dark.Brush.Scrollbar.Track}" CornerRadius="6">
      <Track x:Name="PART_Track" IsDirectionReversed="True">
        <Track.DecreaseRepeatButton>
          <RepeatButton Style="{StaticResource Dark.Scrollbar.LineButtonStyle}" Command="ScrollBar.PageUpCommand"/>
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <!-- Thickness across axis, min length along axis -->
          <Thumb Style="{StaticResource Dark.Scrollbar.ThumbStyle}" Width="8" MinHeight="36"/>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton Style="{StaticResource Dark.Scrollbar.LineButtonStyle}" Command="ScrollBar.PageDownCommand"/>
        </Track.IncreaseRepeatButton>
      </Track>
    </Border>
  </ControlTemplate>

  <!-- Apply ScrollBar Style globally -->
  <Style TargetType="ScrollBar">
    <Setter Property="Background" Value="{StaticResource Dark.Brush.Scrollbar.Track}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Opacity" Value="0.95"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Template" Value="{StaticResource Dark.Scrollbar.VerticalTemplate}"/>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Height" Value="12"/>
        <Setter Property="Template" Value="{StaticResource Dark.Scrollbar.HorizontalTemplate}"/>
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Template" Value="{StaticResource Dark.Scrollbar.VerticalTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- Optional: ScrollViewer tweaks for consistency -->
  <Style TargetType="ScrollViewer">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="CanContentScroll" Value="False"/>
    <Setter Property="PanningMode" Value="Both"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
  </Style>

</ResourceDictionary>
