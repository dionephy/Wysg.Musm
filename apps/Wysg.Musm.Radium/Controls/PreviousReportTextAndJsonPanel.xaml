<UserControl x:Class="Wysg.Musm.Radium.Controls.PreviousReportTextAndJsonPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <FontFamily x:Key="UiMonospaceFont">pack://application:,,,/Wysg.Musm.Radium;component/Fonts/#D2Coding</FontFamily>
        
        <Style x:Key="DarkToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="#D0D0D0"/>
            <Setter Property="BorderBrush" Value="#3C3C3C"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="Margin" Value="4,0,0,0"/>
            <Setter Property="FontFamily" Value="{StaticResource UiMonospaceFont}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#3C3C3C"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#2F65C8"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#2F65C8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <!-- True Grid-Based Row Layout for Previous Reports -->
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" MinWidth="200"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="1*" MinWidth="200"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="1*" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            
            <Grid.RowDefinitions>
                <!-- Row 0: Headers -->
                <RowDefinition Height="Auto"/>
                <!-- Row 1: Header and Findings / Proofread header section -->
                <RowDefinition Height="Auto"/>
                <!-- Row 2: Header and Findings textboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Row 3: Split controls -->
                <RowDefinition Height="Auto"/>
                <!-- Row 4: Final Conclusion label -->
                <RowDefinition Height="Auto"/>
                <!-- Row 5: Final Conclusion textboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Row 6: Second split controls -->
                <RowDefinition Height="Auto"/>
                <!-- Row 7: Header temp label -->
                <RowDefinition Height="Auto"/>
                <!-- Row 8: Header temp textboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Row 9: Chief Complaint label -->
                <RowDefinition Height="Auto"/>
                <!-- Row 10: Chief Complaint textboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Row 11: Patient History label -->
                <RowDefinition Height="Auto"/>
                <!-- Row 12: Patient History textboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Row 13: Study Techniques label -->
                <RowDefinition Height="Auto"/>
                <!-- Row 14: Study Techniques textboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Row 15: Comparison label -->
                <RowDefinition Height="Auto"/>
                <!-- Row 16: Comparison textboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Row 17: Findings split label -->
                <RowDefinition Height="Auto"/>
                <!-- Row 18: Findings split textboxes -->
                <RowDefinition Height="Auto"/>
                <!-- Row 19: Conclusion split label -->
                <RowDefinition Height="Auto"/>
                <!-- Row 20: Conclusion split textboxes -->
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Row 0: Column Headers -->
            <TextBlock Grid.Row="0" Grid.Column="0" Text="Previous Report" FontWeight="Bold" Margin="6,0,0,8"/>
            <TextBlock Grid.Row="0" Grid.Column="2" Text="Proofread" FontWeight="Bold" Margin="6,0,0,8"/>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Previous Header and Findings" Margin="6,0,0,2"/>
            
            <!-- Row 2: Header and Findings Textboxes -->
            <TextBox x:Name="txtHeaderAndFindings" Grid.Row="2" Grid.Column="0"
                     Text="{Binding HeaderAndFindingsText, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True"/>

            <!-- Row 3: Split Controls (main column only) -->
            <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal" Margin="6,2,0,8">
                <Button Content="Split Header" FontSize="10" Padding="4,2" Margin="0,0,0,0" 
                        Command="{Binding SplitHeaderTopCommand}"
                        CommandParameter="{Binding ElementName=txtHeaderAndFindings}"/>
                <Button Content="Split Conclusion" FontSize="10" Padding="4,2" Margin="4,0,0,0" 
                        Command="{Binding SplitConclusionCommand}"
                        CommandParameter="{Binding ElementName=txtHeaderAndFindings}"/>
                <ToggleButton Content="Auto Split" FontSize="10" Padding="4,2" 
                              Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding AutoSplit, Mode=TwoWay}"/>
            </StackPanel>

            <!-- Row 4: Final Conclusion Label -->
            <TextBlock Grid.Row="4" Grid.Column="0" Text="Final Conclusion" Margin="6,4,0,2"/>
            
            <!-- Row 5: Final Conclusion Textboxes -->
            <TextBox x:Name="txtFinalConclusion" Grid.Row="5" Grid.Column="0"
                     Text="{Binding FinalConclusionText, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True"/>
            
            <!-- Row 6: Second Split Controls (main column only) -->
            <StackPanel Grid.Row="6" Grid.Column="0" Orientation="Horizontal" Margin="6,2,0,8">
                <Button Content="Split Header" FontSize="10" Padding="4,2" Margin="0,0,0,0" 
                        Command="{Binding SplitHeaderBottomCommand}"
                        CommandParameter="{Binding ElementName=txtFinalConclusion}"/>
                <Button Content="Split Findings" FontSize="10" Padding="4,2" Margin="4,0,0,0" 
                        Command="{Binding SplitFindingsCommand}"
                        CommandParameter="{Binding ElementName=txtFinalConclusion}"/>
                <ToggleButton Content="Auto Split" FontSize="10" Padding="4,2" 
                              Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding AutoSplit, Mode=TwoWay}"/>
            </StackPanel>

            <!-- Row 7: Header temp Label -->
            <TextBlock Grid.Row="7" Grid.Column="0" Text="Header (temp)" Margin="6,6,0,2"/>
            
            <!-- Row 8: Header temp Textboxes -->
            <TextBox Grid.Row="8" Grid.Column="0" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True"
                     Text="{Binding HeaderTemp, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <!-- Row 9: Chief Complaint Labels -->
            <StackPanel Grid.Row="9" Grid.Column="0" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Chief Complaint" VerticalAlignment="Center"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="8,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoChiefComplaint, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="generate" FontSize="10" Padding="4,2" Margin="4,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="chief_complaint"/>
            </StackPanel>
            
            <StackPanel Grid.Row="9" Grid.Column="2" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Chief Complaint (PR)" VerticalAlignment="Center" FontSize="11"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="6,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoChiefComplaintProofread, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="gen" FontSize="10" Padding="4,2" Margin="3,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="chief_complaint_proofread"/>
            </StackPanel>
            
            <!-- Row 10: Chief Complaint Textboxes -->
            <TextBox Grid.Row="10" Grid.Column="0" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True"
                     Text="{Binding ChiefComplaint, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            
            <!-- Chief Complaint Proofread - Now binds to computed ChiefComplaintProofreadDisplay when ProofreadMode is ON -->
            <TextBox Grid.Row="10" Grid.Column="2" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <!-- Default: Editable, binds to raw ChiefComplaintProofread -->
                        <Setter Property="Text" Value="{Binding ChiefComplaintProofread, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Style.Triggers>
                            <!-- When ProofreadMode is ON: Read-only, binds to computed display -->
                            <DataTrigger Binding="{Binding DataContext.ProofreadMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter Property="Text" Value="{Binding DataContext.ChiefComplaintProofreadDisplay, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <!-- Row 11: Patient History Labels -->
            <StackPanel Grid.Row="11" Grid.Column="0" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Patient History" VerticalAlignment="Center"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="8,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoPatientHistory, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="generate" FontSize="10" Padding="4,2" Margin="4,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="patient_history"/>
            </StackPanel>
            
            <StackPanel Grid.Row="11" Grid.Column="2" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Patient History (PR)" VerticalAlignment="Center" FontSize="11"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="6,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoPatientHistoryProofread, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="gen" FontSize="10" Padding="4,2" Margin="3,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="patient_history_proofread"/>
            </StackPanel>
            
            <!-- Row 12: Patient History Textboxes -->
            <TextBox Grid.Row="12" Grid.Column="0" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True"
                     Text="{Binding PatientHistory, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            
            <!-- Patient History Proofread - Now binds to computed PatientHistoryProofreadDisplay when ProofreadMode is ON -->
            <TextBox Grid.Row="12" Grid.Column="2" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Text" Value="{Binding PatientHistoryProofread, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.ProofreadMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter Property="Text" Value="{Binding DataContext.PatientHistoryProofreadDisplay, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <!-- Row 13: Study Techniques Labels -->
            <StackPanel Grid.Row="13" Grid.Column="0" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Study Techniques" VerticalAlignment="Center"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="8,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoStudyTechniques, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="generate" FontSize="10" Padding="4,2" Margin="4,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="study_techniques"/>
            </StackPanel>
            
            <StackPanel Grid.Row="13" Grid.Column="2" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Study Techniques (PR)" VerticalAlignment="Center" FontSize="11"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="6,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoStudyTechniquesProofread, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="gen" FontSize="10" Padding="4,2" Margin="3,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="study_techniques_proofread"/>
            </StackPanel>
            
            <!-- Row 14: Study Techniques Textboxes -->
            <TextBox Grid.Row="14" Grid.Column="0" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True"
                     Text="{Binding StudyTechniques, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            
            <!-- Study Techniques Proofread - Now binds to computed StudyTechniquesProofreadDisplay when ProofreadMode is ON -->
            <TextBox Grid.Row="14" Grid.Column="2" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Text" Value="{Binding StudyTechniquesProofread, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.ProofreadMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter Property="Text" Value="{Binding DataContext.StudyTechniquesProofreadDisplay, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <!-- Row 15: Comparison Labels -->
            <StackPanel Grid.Row="15" Grid.Column="0" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Comparison" VerticalAlignment="Center"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="8,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoComparison, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="generate" FontSize="10" Padding="4,2" Margin="4,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="comparison"/>
            </StackPanel>
            
            <StackPanel Grid.Row="15" Grid.Column="2" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Comparison (PR)" VerticalAlignment="Center" FontSize="11"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="6,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoComparisonProofread, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="gen" FontSize="10" Padding="4,2" Margin="3,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="comparison_proofread"/>
            </StackPanel>
            
            <!-- Row 16: Comparison Textboxes -->
            <TextBox Grid.Row="16" Grid.Column="0" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True"
                     Text="{Binding Comparison, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            
            <!-- Comparison Proofread - Now binds to computed ComparisonProofreadDisplay when ProofreadMode is ON -->
            <TextBox Grid.Row="16" Grid.Column="2" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Text" Value="{Binding ComparisonProofread, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.ProofreadMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter Property="Text" Value="{Binding DataContext.ComparisonProofreadDisplay, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <!-- Row 17: Findings split Labels -->
            <TextBlock Grid.Row="17" Grid.Column="0" Text="Findings (split)" Margin="6,6,0,2"/>
            
            <StackPanel Grid.Row="17" Grid.Column="2" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Findings (PR)" VerticalAlignment="Center" FontSize="11"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="6,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoFindingsProofread, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="gen" FontSize="10" Padding="4,2" Margin="3,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="findings_proofread"/>
            </StackPanel>
            
            <!-- Row 18: Findings split Textboxes -->
            <TextBox Grid.Row="18" Grid.Column="0" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True"
                     Text="{Binding SplitFindings, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            
            <!-- Findings Proofread - Now binds to computed FindingsProofreadDisplay when ProofreadMode is ON -->
            <TextBox Grid.Row="18" Grid.Column="2" Padding="6" Margin="0,0,0,4" TextWrapping="Wrap" AcceptsReturn="True">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Text" Value="{Binding FindingsProofread, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.ProofreadMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter Property="Text" Value="{Binding DataContext.FindingsProofreadDisplay, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <!-- Row 19: Conclusion split Labels -->
            <TextBlock Grid.Row="19" Grid.Column="0" Text="Conclusion (split)" Margin="6,6,0,2"/>
            
            <StackPanel Grid.Row="19" Grid.Column="2" Orientation="Horizontal" Margin="6,6,0,2">
                <TextBlock Text="Conclusion (PR)" VerticalAlignment="Center" FontSize="11"/>
                <ToggleButton Content="auto" FontSize="10" Padding="4,2" Margin="6,0,0,0" Style="{StaticResource DarkToggleButtonStyle}"
                              IsChecked="{Binding DataContext.AutoConclusionProofread, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}"/>
                <Button Content="gen" FontSize="10" Padding="4,2" Margin="3,0,0,0"
                        Command="{Binding DataContext.GenerateFieldCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="conclusion_proofread"/>
            </StackPanel>
            
            <!-- Row 20: Conclusion split Textboxes -->
            <TextBox Grid.Row="20" Grid.Column="0" Padding="6" Margin="0,0,0,8" TextWrapping="Wrap" AcceptsReturn="True"
                     Text="{Binding SplitConclusion, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            
            <!-- Conclusion Proofread - Now binds to computed ConclusionProofreadDisplay when ProofreadMode is ON -->
            <TextBox Grid.Row="20" Grid.Column="2" Padding="6" Margin="0,0,0,8" TextWrapping="Wrap" AcceptsReturn="True">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Text" Value="{Binding ConclusionProofread, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.ProofreadMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter Property="Text" Value="{Binding DataContext.ConclusionProofreadDisplay, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <!-- GridSplitters -->
            <GridSplitter Grid.Row="0" Grid.RowSpan="21" Grid.Column="1" HorizontalAlignment="Stretch" Width="2" Background="#2D2D30"/>
            <GridSplitter Grid.Row="0" Grid.RowSpan="21" Grid.Column="3" HorizontalAlignment="Stretch" Width="2" Background="#2D2D30"/>

            <!-- Column 4: JSON (spans all rows) -->
            <TextBox x:Name="txtJson" Grid.Row="0" Grid.RowSpan="21" Grid.Column="4" 
                     Text="{Binding JsonText, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Padding="6" Margin="0" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" 
                     AcceptsReturn="True" VerticalAlignment="Stretch"/>
        </Grid>
    </ScrollViewer>
</UserControl>
