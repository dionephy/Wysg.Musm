<UserControl x:Class="Wysg.Musm.Radium.Views.SettingsTabs.HotkeysSettingsTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="900">
    <UserControl.Resources>
        <SolidColorBrush x:Key="HotkeyPanel" Color="#262A30"/>
        <SolidColorBrush x:Key="HotkeyPanelAlt" Color="#2F343A"/>
        <SolidColorBrush x:Key="HotkeyBorder" Color="#41474F"/>
        <SolidColorBrush x:Key="HotkeySelection" Color="#0E4D7A"/>
        <Style TargetType="DataGrid" x:Key="HotkeyGridStyle">
            <Setter Property="Background" Value="{StaticResource HotkeyPanel}"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="BorderBrush" Value="{StaticResource HotkeyBorder}"/>
            <Setter Property="RowBackground" Value="#262A30"/>
            <Setter Property="AlternatingRowBackground" Value="#22272C"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
        </Style>
        <Style TargetType="DataGridColumnHeader" x:Key="HotkeyHeaderStyle">
            <Setter Property="Background" Value="#30363D"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="BorderBrush" Value="#41474F"/>
            <Setter Property="BorderThickness" Value="0 0 1 1"/>
            <Setter Property="Padding" Value="6 4"/>
        </Style>
        <Style TargetType="DataGridRow" x:Key="HotkeyRowStyle">
            <Setter Property="BorderBrush" Value="#30363D"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource HotkeySelection}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox" x:Key="HotkeyInputBox">
            <Setter Property="Background" Value="#202429"/>
            <Setter Property="Foreground" Value="#F5F6F7"/>
            <Setter Property="BorderBrush" Value="#41474F"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="FontFamily" Value="Consolas"/>
        </Style>
        <Style TargetType="Button" x:Key="HotkeyButton" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#2F343A"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="BorderBrush" Value="#41474F"/>
            <Setter Property="Margin" Value="6 0 0 0"/>
            <Setter Property="Padding" Value="8 4"/>
        </Style>
    </UserControl.Resources>
    
    <Grid Margin="8" Loaded="OnLoaded">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="Hotkeys (Text Expansion Shortcuts)" FontWeight="Bold" FontSize="14" Foreground="{DynamicResource BrushTextPrimary}" Margin="0,0,0,8"/>

        <Grid Grid.Row="1" Margin="0,0,0,8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Trigger:" VerticalAlignment="Center" Margin="0,0,8,4" Foreground="{DynamicResource BrushTextPrimary}"/>
            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TriggerText, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource HotkeyInputBox}" Margin="0,0,0,4"/>
            <Button Grid.Row="0" Grid.Column="2" Style="{StaticResource HotkeyButton}" Content="Add" Command="{Binding AddCommand}" Margin="6,0,0,4"/>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Expansion:" VerticalAlignment="Top" Margin="0,0,8,0" Foreground="{DynamicResource BrushTextPrimary}"/>
            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ExpansionText, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap" Height="60" VerticalScrollBarVisibility="Auto" Style="{StaticResource HotkeyInputBox}"/>
            <Button Grid.Row="1" Grid.Column="2" Style="{StaticResource HotkeyButton}" Content="Delete Selected" Command="{Binding DeleteCommand}" VerticalAlignment="Top"/>

            <TextBlock Grid.Row="2" Grid.Column="0" Text="Description:" VerticalAlignment="Center" Margin="0,4,8,0" Foreground="{DynamicResource BrushTextPrimary}"/>
            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding DescriptionText, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource HotkeyInputBox}"/>

            <TextBlock Grid.Row="3" Grid.ColumnSpan="3" Text="Tip: Type trigger text in editors followed by space or punctuation to expand. Example: 'bll' expands to 'bilateral leukoaraiosis'" Foreground="#9AA0A6" Margin="0,8,0,0" TextWrapping="Wrap"/>
        </Grid>

        <DataGrid Grid.Row="2" ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="False" HeadersVisibility="Column" IsReadOnly="False" RowHeaderWidth="0" Margin="0,0,0,8"
                  Style="{StaticResource HotkeyGridStyle}" RowStyle="{StaticResource HotkeyRowStyle}" ColumnHeaderStyle="{StaticResource HotkeyHeaderStyle}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding HotkeyId}" Width="60" IsReadOnly="True"/>
                <DataGridTextColumn Header="Trigger" Binding="{Binding TriggerText}" Width="120" IsReadOnly="True"/>
                <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="220" IsReadOnly="True"/>
                <DataGridTextColumn Header="Expansion Preview" Binding="{Binding ExpansionText}" Width="*" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Setter Property="ToolTip" Value="{Binding ExpansionText}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridCheckBoxColumn Header="Active" Binding="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="70"/>
                <DataGridTextColumn Header="Updated" Binding="{Binding UpdatedAt}" Width="140" IsReadOnly="True"/>
                <DataGridTextColumn Header="Rev" Binding="{Binding Rev}" Width="60" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Style="{StaticResource HotkeyButton}" Content="Refresh" Command="{Binding RefreshCommand}"/>
            <Button Content="Close" Width="90" IsCancel="True" Margin="6,0,0,0"/>
        </StackPanel>
    </Grid>
</UserControl>
