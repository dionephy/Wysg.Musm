<Window x:Class="Wysg.Musm.Radium.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:editor="clr-namespace:Wysg.Musm.Editor.Controls;assembly=Wysg.Musm.Editor"
        xmlns:rad="clr-namespace:Wysg.Musm.Radium.Controls"
        xmlns:conv="clr-namespace:Wysg.Musm.Radium.ViewModels.Converters"
        xmlns:local="clr-namespace:Wysg.Musm.Radium.Converters"
        xmlns:cc="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
        mc:Ignorable="d"
        Title="Radium"
        Height="850" Width="1400"
        WindowStartupLocation="CenterScreen"
        Background="#111"
        Foreground="#d0d0d0">

    <Window.Resources>
        <!-- Shared font resource (ensure Fonts/D2Coding.ttf Build Action=Resource) -->
        <!-- If your assembly name differs adjust Wysg.Musm.Radium below -->
        <FontFamily x:Key="UiMonospaceFont">pack://application:,,,/Wysg.Musm.Radium;component/Fonts/#D2Coding</FontFamily>
        <local:OffsetSubtractConverter x:Key="WidthSubtract"/>
        <local:OffsetSubtractAndHalveConverter x:Key="HeightSubtract"/>

        <!-- Global Dark Theme Brushes -->
        <Color x:Key="Dark.Color.Background">#1E1E1E</Color>
        <Color x:Key="Dark.Color.Panel">#252525</Color>
        <Color x:Key="Dark.Color.PanelAlt">#2D2D30</Color>
        <Color x:Key="Dark.Color.Border">#3C3C3C</Color>
        <Color x:Key="Dark.Color.BorderLight">#4A4A4A</Color>
        <Color x:Key="Dark.Color.Accent">#3D7BFD</Color>
        <Color x:Key="Dark.Color.AccentAlt">#2F65C8</Color>
        <Color x:Key="Dark.Color.Selection">#094771</Color>
        <Color x:Key="Dark.Color.Foreground">#D0D0D0</Color>
        <Color x:Key="Dark.Color.ForegroundDim">#A0A0A0</Color>

        <SolidColorBrush x:Key="Dark.Brush.Background" Color="{StaticResource Dark.Color.Background}"/>
        <SolidColorBrush x:Key="Dark.Brush.Panel" Color="{StaticResource Dark.Color.Panel}"/>
        <SolidColorBrush x:Key="Dark.Brush.PanelAlt" Color="{StaticResource Dark.Color.PanelAlt}"/>
        <SolidColorBrush x:Key="Dark.Brush.Border" Color="{StaticResource Dark.Color.Border}"/>
        <SolidColorBrush x:Key="Dark.Brush.BorderLight" Color="{StaticResource Dark.Color.BorderLight}"/>
        <SolidColorBrush x:Key="Dark.Brush.Accent" Color="{StaticResource Dark.Color.Accent}"/>
        <SolidColorBrush x:Key="Dark.Brush.AccentAlt" Color="{StaticResource Dark.Color.AccentAlt}"/>
        <SolidColorBrush x:Key="Dark.Brush.Selection" Color="{StaticResource Dark.Color.Selection}"/>
        <SolidColorBrush x:Key="Dark.Brush.Foreground" Color="{StaticResource Dark.Color.Foreground}"/>
        <SolidColorBrush x:Key="Dark.Brush.ForegroundDim" Color="{StaticResource Dark.Color.ForegroundDim}"/>






        <!-- Accent brushes -->
        <Color x:Key="AccentColor">#3D7BFD</Color>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
        <SolidColorBrush x:Key="PanelBrush" Color="#1E1E1E"/>
        <SolidColorBrush x:Key="PanelAltBrush" Color="#252526"/>
        <SolidColorBrush x:Key="BorderBrushDark" Color="#2D2D30"/>
        <SolidColorBrush x:Key="GlyphBrush" Color="#808080"/>

        <!-- Base style for embedded AvalonEdit via MusmEditor inside EditorControl -->
        <Style TargetType="editor:MusmEditor">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="{StaticResource Dark.Brush.ForegroundDim}"/>
            <Setter Property="BorderBrush" Value="#2D2D30"/>
            <Setter Property="BorderThickness" Value="1"/>            
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ShowLineNumbers" Value="True"/>
            <Setter Property="Padding" Value="4"/>
        </Style>
      
        <!-- Style for our wrapper EditorControl -->
        <Style TargetType="editor:EditorControl">
            <Setter Property="MinHeight" Value="120"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="FontFamily" Value="{StaticResource UiMonospaceFont}"/>
        </Style>

        <Style TargetType="GridSplitter">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="ShowsPreview" Value="False"/>
        </Style>

        <Style x:Key="DarkToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="{StaticResource Dark.Brush.PanelAlt}"/>
            <Setter Property="Foreground" Value="{StaticResource Dark.Brush.Foreground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Dark.Brush.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="FontFamily" Value="{StaticResource UiMonospaceFont}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Dark.Brush.Border}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Dark.Brush.AccentAlt}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Dark.Brush.AccentAlt}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <local:LockEmojiConverter x:Key="LockEmojiConverter"/>
        <conv:BoolToBrushConverter x:Key="BoolToBrushConverter" TrueBrush="#FF5A5A" FalseBrush="#d0d0d0"/>

        <!--
        <Style TargetType="Button">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="#C8C8C8"/>
            <Setter Property="BorderBrush" Value="#3D3D40"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="4,2,0,2"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#232326"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#3D7BFD"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#808080"/>
                                <Setter TargetName="border" Property="Background" Value="#222"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        

        <Style TargetType="ListBox">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="BorderBrush" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="#D0D0D0"/>
            <Setter Property="FontFamily" Value="{StaticResource UiMonospaceFont}"/>
        </Style>
        

        
        
        
        
        <Style x:Key="DarkMiniCombo" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="#D0D0D0"/>
            <Setter Property="BorderBrush" Value="#2D2D30"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="{StaticResource UiMonospaceFont}"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Padding" Value="4,2,24,2"/>
            <Setter Property="MinWidth" Value="260"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                            <DockPanel Margin="0">
                                <ToggleButton x:Name="DropDownToggle" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Background="Transparent" BorderThickness="0" Padding="0" Width="18">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1.5" Stroke="#AAA" Data="M 0 0 L 4 4 L 8 0"/>                                
                                </ToggleButton>
                                <ContentPresenter Margin="4,1,0,1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                                  Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"/>
                            </DockPanel>
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Fade">
                                <Border x:Name="DropDownBorder" Background="#1E1E1E" BorderBrush="#2D2D30" BorderThickness="1" CornerRadius="2">
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3D7BFD"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#5A9FD6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBoxItem" x:Key="DarkMiniComboItem">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="#D0D0D0"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#2A2A2A"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#333842"/>
                                <Setter Property="Foreground" Value="#FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#555"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        -->
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="colFirst" Width="Auto" />
            <ColumnDefinition x:Name="colSecond" Width="*" />
        </Grid.ColumnDefinitions>


        <Grid Grid.Row="1" Grid.Column="1" Name="gridTop" VerticalAlignment="Top" Width="{Binding ElementName=gridCenter, Path=Width}">
            <Grid.Height>
                <MultiBinding Converter="{StaticResource HeightSubtract}">
                    <Binding RelativeSource="{RelativeSource AncestorType=Window}" Path="ActualHeight"/>
                    <Binding ElementName="gridCenter" Path="ActualHeight"/>
                </MultiBinding>
            </Grid.Height>
            <rad:ReportInputsAndJsonPanel x:Name="gridTopChild" />
           
        </Grid>

        <Grid Grid.Row="1" Grid.Column="1" Name="gridSide" Height="{Binding ElementName=gridCenter, Path=Height}" >
            <Grid.Width>
                <MultiBinding Converter="{StaticResource WidthSubtract}">
                    <Binding RelativeSource="{RelativeSource AncestorType=Window}" Path="ActualWidth"/>
                    <Binding ElementName="gridCenter" Path="ActualWidth"/>
                </MultiBinding>
            </Grid.Width>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="2" />
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <rad:ReportInputsAndJsonPanel x:Name="gridSideTop" Grid.Row="0" />

                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Height="2"/>

                <rad:PreviousReportTextAndJsonPanel x:Name="gridSideBottom" Grid.Row="2"
                    HeaderAndFindingsText="{Binding PreviousHeaderAndFindingsText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    FinalConclusionText="{Binding PreviousFinalConclusionText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    JsonText="{Binding PreviousReportJson, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />


                <rad:StatusPanel x:Name="gridStatusLandscape" Grid.Row="3" Margin="0,2,0,0">
                    <rad:StatusPanel.TopContent>
                        <rad:StatusActionsBar />
                    </rad:StatusPanel.TopContent>
                </rad:StatusPanel>

            </Grid>
            
        </Grid>


        <Grid Grid.Row="1" Grid.Column="1" Name="gridBottom" VerticalAlignment="Bottom" Width="{Binding ElementName=gridCenter, Path=Width}" >
            <Grid.Height>
                <MultiBinding Converter="{StaticResource HeightSubtract}">
                    <Binding RelativeSource="{RelativeSource AncestorType=Window}" Path="ActualHeight"/>
                    <Binding ElementName="gridCenter" Path="ActualHeight"/>
                </MultiBinding>
            </Grid.Height>

            
            
            <rad:PreviousReportTextAndJsonPanel x:Name="gridBottomControl"
                HeaderAndFindingsText="{Binding PreviousHeaderAndFindingsText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                FinalConclusionText="{Binding PreviousFinalConclusionText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                JsonText="{Binding PreviousReportJson, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Reverse="True"
                />

            
        </Grid>

        <!-- Central editing area -->
        <Grid Grid.Row="1" Grid.Column="1" Name="gridCenter" Background="#181818" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Left: Current report -->
            <Grid Grid.Column="0" Margin="0">
                <Grid.RowDefinitions>
                   
                    <RowDefinition Height="48"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="Auto" MinHeight="24"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="*" MinHeight="160"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="*" MinHeight="160"/>
                </Grid.RowDefinitions>

                <!-- Two-line header area: top buttons/toggles; bottom label -->
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <!-- Upper row: controls (no scrollbar) -->
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                        <Button Content="New" Command="{Binding NewStudyCommand}" FontSize="12" Margin="2,2,0,2"/>
                        <Button Content="Send Report Preview" Command="{Binding SendReportPreviewCommand}" Margin="2,2,0,2"/>
                        <Button Content="Send Report" Command="{Binding SendReportCommand}"   Margin="2,2,0,2"/>
                        <Button Content="Extract Phrases" Click="OnExtractPhrases"  Margin="2,2,0,2"/>
                        <Button Content="Test NewStudy Proc" Command="{Binding TestNewStudyProcedureCommand}" Margin="2,2,0,2"/>
                    </StackPanel>

                    <!-- Lower row: toggles and label -->
                    <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,0">
                        <ToggleButton x:Name="btnStudyLocked"
                                      Margin="2,0,0,2"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding PatientLocked, Mode=TwoWay}"
                                      Style="{StaticResource DarkToggleButtonStyle}"
                                      Padding="4" Width="28" Height="28" ToolTip="Toggle Study Lock"
                                      FontFamily="./Fonts/#D2Coding">
                            <ToggleButton.Resources>
                                <Geometry x:Key="LockedGeometry">M4,9 L4,16 C4,17.1 4.9,18 6,18 L14,18 C15.1,18 16,17.1 16,16 L16,9 L14,9 L14,7 C14,4.8 12.2,3 10,3 C7.8,3 6,4.8 6,7 L6,9 L4,9 Z M8,9 L8,7 C8,5.9 8.9,5 10,5 C11.1,5 12,5.9 12,7 L12,9 Z</Geometry>
                                <Geometry x:Key="UnlockedGeometry">M4,9 L4,16 C4,17.1 4.9,18 6,18 L14,18 C15.1,18 16,17.1 16,16 L16,9 L10,9 L10,7 C10,5.9 10.9,5 12,5 C12.7,5 13.3,5.3 13.7,5.8 L15.1,4.4 C14.2,3.5 13.1,3 12,3 C9.8,3 8,4.8 8,7 L8,9 L4,9 Z</Geometry>
                            </ToggleButton.Resources>
                            <Grid>
                                <Path x:Name="LockPath" Width="16" Height="16" Stretch="Uniform" Fill="#C8C8C8">
                                    <Path.Style>
                                        <Style TargetType="Path">
                                            <Setter Property="Data" Value="{StaticResource UnlockedGeometry}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                    <Setter Property="Data" Value="{StaticResource LockedGeometry}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                            </Grid>
                        </ToggleButton>
                        <ToggleButton x:Name="btnReportified"
                                      Margin="2,0,0,2"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding Reportified, Mode=TwoWay}"
                                      Style="{StaticResource DarkToggleButtonStyle}"
                                      Padding="4" Width="28" Height="28" ToolTip="Toggle Reportified"
                                      FontFamily="./Fonts/#D2Coding">
                            <ToggleButton.Resources>
                                <!-- Note icon -->
                                <Geometry x:Key="NoteGeometry">M4,4 L16,4 L16,20 L4,20 Z M4,4 L10,10 L16,4</Geometry>
                                <!-- Check mark -->
                                <Geometry x:Key="CheckGeometry">M7,15 L10,18 L17,11</Geometry>
                                <BooleanToVisibilityConverter x:Key="BoolToVis"/>
                            </ToggleButton.Resources>
                            <Grid>
                                <Path Width="16" Height="16" Stretch="Uniform" Fill="#C8C8C8" Data="{StaticResource NoteGeometry}"/>
                                <Path Width="12" Height="12" Stretch="Uniform" Stroke="#3D7BFD" StrokeThickness="2"
                                      Data="{StaticResource CheckGeometry}"
                                      Visibility="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}, Converter={StaticResource BoolToVis}}"/>
                            </Grid>
                        </ToggleButton>
                        <!-- Selectable Current Study Label (read-only TextBox) -->
                        <TextBox Text="{Binding CurrentStudyLabel, Mode=OneWay}" Margin="2,0,0,0" FontFamily="{StaticResource UiMonospaceFont}" Foreground="#5A9FD6" Background="Transparent" BorderThickness="0" IsReadOnly="True" IsReadOnlyCaretVisible="False" TextWrapping="Wrap" MinWidth="260" Cursor="" Padding="0,0,0,0"/>
                    </StackPanel>
                </Grid>

                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Height="2"/>
                <editor:EditorControl x:Name="EditorHeader" Grid.Row="2" MinHeight="70" DocumentText="{Binding HeaderText, Mode=OneWay}" IsReadOnly="True"/>
                <GridSplitter Grid.Row="3" HorizontalAlignment="Stretch" Height="2"/>
                <editor:EditorControl x:Name="EditorFindings" Grid.Row="4" DocumentText="{Binding FindingsText, Mode=TwoWay}"/>
                <GridSplitter Grid.Row="5" HorizontalAlignment="Stretch" Height="2"/>
                <editor:EditorControl x:Name="EditorConclusion" Grid.Row="6" DocumentText="{Binding ConclusionText, Mode=TwoWay}"/>
            </Grid>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Width="2" Background="#2D2D30"/>

            <!-- Right: Previous + suggestion -->
            <Grid Grid.Column="2" Margin="0">
                <Grid.RowDefinitions>
                    
                    <!-- <RowDefinition Height="18"/> -->
                    <RowDefinition Height="48"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="Auto" MinHeight="24"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="*" MinHeight="160"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="*" MinHeight="160"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <!-- Row 0: tabs + Add button at right, with overflow dropdown (no scrollbar) -->
                    <rad:PreviousStudiesStrip Grid.Row="0"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding PreviousStudies}"
                          SelectCommand="{Binding SelectPreviousStudyCommand}"
                          AddCommand="{Binding AddStudyCommand}"/>

                    <!-- Row 1: toggle + combo layout (stretching) -->
                    <Grid Grid.Row="1" Margin="0" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="btnPreviousReportified"
                                      Grid.Column="0"
                                      Margin="2,0,2,2"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding PreviousReportified, Mode=TwoWay}"
                                      Style="{StaticResource DarkToggleButtonStyle}"
                                      Padding="4" Width="28" Height="28" ToolTip="Toggle Previous Reportified">
                            <ToggleButton.Resources>
                                <Geometry x:Key="PrevNoteGeometry">M4,4 L16,4 L16,20 L4,20 Z M4,4 L10,10 L16,4</Geometry>
                                <Geometry x:Key="PrevCheckGeometry">M7,15 L10,18 L17,11</Geometry>
                                <BooleanToVisibilityConverter x:Key="BoolToVis"/>
                            </ToggleButton.Resources>
                            <Grid>
                                <Path Width="14" Height="14" Stretch="Uniform" Fill="#C8C8C8" Data="{StaticResource PrevNoteGeometry}"/>
                                <Path Width="10" Height="10" Stretch="Uniform" Stroke="#3D7BFD" StrokeThickness="2"
                                      Data="{StaticResource PrevCheckGeometry}"
                                      Visibility="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}, Converter={StaticResource BoolToVis}}"/>
                            </Grid>
                        </ToggleButton>
                        <Grid Grid.Column="1" Margin="0,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" Margin="0,0,0,0">
                                <Button Content="test button" FontSize="11" Margin="0,0,0,0" />
                                <ToggleButton Content="Splitted" FontSize="11" Margin="4,0,0,0" 
                                              Style="{StaticResource DarkToggleButtonStyle}" 
                                              IsChecked="{Binding PreviousReportSplitted, Mode=TwoWay}"/>
                            </StackPanel>
                            <ComboBox Grid.Row="1" x:Name="cboPrevReport" Margin="0,1,0,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                      SelectedItem="{Binding SelectedPreviousStudy.SelectedReport, Mode=TwoWay}" MinWidth="200">
                                <ComboBox.ItemsSource>
                                    <CompositeCollection>
                                        <ComboBoxItem Content="Dummy Studyname (2025-01-01 09:00:00) - 2025-01-02 10:11:12 by Radiologist X"/>
                                        <cc:CollectionContainer Collection="{Binding SelectedPreviousStudy.Reports}"/>
                                    </CompositeCollection>
                                </ComboBox.ItemsSource>
                            </ComboBox>
                        </Grid>
                    </Grid>
                </Grid>

                

                

                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Height="2"/>
                <editor:EditorControl x:Name="EditorPreviousHeader" Grid.Row="2" MinHeight="70" DocumentText="{Binding PreviousHeaderText, Mode=TwoWay}"/>
                <GridSplitter Grid.Row="3" HorizontalAlignment="Stretch" Height="2"/>
                <editor:EditorControl x:Name="EditorPreviousFindings" Grid.Row="4" DocumentText="{Binding PreviousHeaderAndFindingsText, Mode=TwoWay}" Cursor=""/>
                <GridSplitter Grid.Row="5" HorizontalAlignment="Stretch" Height="2"/>
                <editor:EditorControl x:Name="EditorPreviousConclusion" Grid.Row="6" DocumentText="{Binding PreviousFinalConclusionText, Mode=TwoWay}"/>
            </Grid>
        </Grid>

        <!-- Status bar (bottom) with two lines -->
        <rad:StatusPanel x:Name="gridStatusPortrait" Grid.Row="2" Grid.ColumnSpan="2" Margin="0,2,0,0">
            <rad:StatusPanel.TopContent>
                <rad:StatusActionsBar />
            </rad:StatusPanel.TopContent>
        </rad:StatusPanel>
    </Grid>
</Window>