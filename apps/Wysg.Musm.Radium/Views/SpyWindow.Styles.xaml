<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Dark palette -->
    <SolidColorBrush x:Key="Dark.Background" Color="#1E1E1E"/>
    <SolidColorBrush x:Key="Dark.Panel" Color="#252526"/>
    <SolidColorBrush x:Key="Dark.Accent" Color="#2D2D30"/>
    <SolidColorBrush x:Key="Dark.Border" Color="#3C3C3C"/>
    <SolidColorBrush x:Key="Dark.Foreground" Color="#D0D0D0"/>
    <SolidColorBrush x:Key="Dark.ForegroundDim" Color="#B0B0B0"/>
    <SolidColorBrush x:Key="Dark.Hover" Color="#2F2F33"/>
    <SolidColorBrush x:Key="Dark.HoverBorder" Color="#5A5A5A"/>
    <SolidColorBrush x:Key="Dark.HoverOverlay" Color="#203A3A3D"/>
    <SolidColorBrush x:Key="Dark.Pressed" Color="#454549"/>
    
    <!-- Path highlight brushes -->
    <SolidColorBrush x:Key="Path.Level1" Color="#332B6CB0"/>
    <SolidColorBrush x:Key="Path.Level2" Color="#334CAF50"/>
    <SolidColorBrush x:Key="Path.Level3" Color="#33FF9800"/>
    <SolidColorBrush x:Key="Path.Level4" Color="#33E91E63"/>
    <SolidColorBrush x:Key="Path.Deep"   Color="#333A3D41"/>

    <!-- Button Style -->
    <Style x:Key="SpyWindowButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Dark.Accent}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Dark.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,3"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Dark.Pressed}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Dark.Pressed}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#808080"/>
                <Setter Property="Background" Value="#2A2A2A"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="DarkTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource Dark.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Dark.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CaretBrush" Value="White"/>
    </Style>

    <!-- Toggle overlay template -->
    <ControlTemplate x:Key="OverlayToggleTemplate" TargetType="ToggleButton">
        <Border Background="Transparent"/>
    </ControlTemplate>

    <!-- ComboBox Style -->
    <Style x:Key="SpyWindowComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource Dark.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Dark.Border}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2"/>
                        <Border x:Name="HoverOverlay" Background="Transparent" CornerRadius="2"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="22"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Margin="6,2,4,2" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <TextBlock.Text>
                                    <PriorityBinding>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="SelectedValue"/>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="SelectedItem.Name"/>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Text"/>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="SelectionBoxItem"/>
                                    </PriorityBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <Border Grid.Column="1" Background="{StaticResource Dark.Accent}" IsHitTestVisible="False">
                                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource Dark.Foreground}"/>
                            </Border>
                            <ToggleButton x:Name="Toggle" Grid.ColumnSpan="2" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                                          FocusVisualStyle="{x:Null}"
                                          Template="{StaticResource OverlayToggleTemplate}"
                                          IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                        </Grid>
                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                            <Border Background="{StaticResource Dark.Panel}" BorderBrush="{StaticResource Dark.Border}" BorderThickness="1" MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                <ScrollViewer>
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Dark.HoverBorder}"/>
                            <Setter TargetName="HoverOverlay" Property="Background" Value="{StaticResource Dark.HoverOverlay}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="#2A2A2A"/>
                            <Setter Property="Foreground" Value="#808080"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpyWindowComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{StaticResource Dark.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
    </Style>

    <!-- CheckBox Style -->
    <Style x:Key="DarkCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="Box" Width="14" Height="14" Background="{StaticResource Dark.Panel}" BorderBrush="{StaticResource Dark.Border}" BorderThickness="1" CornerRadius="2">
                            <Path x:Name="CheckMark" Visibility="Collapsed" Stroke="#E6E6E6" StrokeThickness="2" Data="M 2 8 L 6 12 L 12 3"/>
                        </Border>
                        <ContentPresenter Margin="6,0,0,0" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Box" Property="Background" Value="{StaticResource Dark.Accent}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Box" Property="Background" Value="#2A2A2A"/>
                            <Setter TargetName="Box" Property="BorderBrush" Value="#3A3A3A"/>
                            <Setter TargetName="CheckMark" Property="Stroke" Value="#A8A8A8"/>
                            <Setter Property="Foreground" Value="#9B9B9B"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Style -->
    <Style x:Key="SpyWindowScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Background" Value="{StaticResource Dark.Accent}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
    </Style>

    <!-- TreeView Styles -->
    <Style x:Key="SpyWindowTreeViewStyle" TargetType="TreeView">
        <Setter Property="Background" Value="{StaticResource Dark.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Dark.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="SpyWindowTreeViewItemStyle" TargetType="TreeViewItem">
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource Dark.Panel}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource Dark.Hover}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2F2F33"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid Styles -->
    <Style x:Key="SpyWindowDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource Dark.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Dark.Border}"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource Dark.Border}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource Dark.Border}"/>
        <Setter Property="RowBackground" Value="#222"/>
        <Setter Property="AlternatingRowBackground" Value="#262626"/>
    </Style>

    <Style x:Key="SpyWindowDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource Dark.Accent}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Dark.Border}"/>
    </Style>

    <Style x:Key="SpyWindowDataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="Background" Value="{StaticResource Dark.Panel}"/>
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Dark.Border}"/>
    </Style>

    <!-- GroupBox Style -->
    <Style x:Key="SpyWindowGroupBoxStyle" TargetType="GroupBox">
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
    </Style>

    <!-- TextBlock Style -->
    <Style x:Key="SpyWindowTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Dark.Foreground}"/>
    </Style>

</ResourceDictionary>
